{"name":"R0adkll-flocking","tagline":"Universal Java Flocking Engine ","body":"#r0adkll-flocking\r\n\r\nUniversal Flocking engine written in java.\r\n\r\nThis engine was built and tested on the Libgdx framework. The algorithm works using Reynold's Three Rules\r\n  1.  Cohesion\r\n  2.  Alignment\r\n  3.  Seperation\r\n\r\nThis engine allows you set a custom value for each of the three rules allowing your flocking mass to take on any shape \r\nthat it wants\r\n\r\n## Usage\r\n<pre lang=\"java\"><code>\r\nprivate FlockEngine engine;\r\n  \r\n// Create Flocking Engine and initialize it with all\r\n// the basic parameters\r\nengine = new FlockEngine();\r\n\t\t\r\n/*\r\n * Set the three Reynold flocking rules\r\n */\r\nengine.setAlignment(0.80f);\r\nengine.setCohesion(0.65f);\r\nengine.setSeparation(0.60f);\r\n\t\t\r\n/*\r\n * Set the boid interaction and seperation distances\r\n */\r\nengine.setInteractionRadius(30);\r\nengine.setSeparationRadius(15);\r\n\t\t\r\n// Set the boid speed limit\r\nengine.setSpeedLimit(80); \r\n</code></pre>        \r\n\r\nAfter creating the engine, you need to populate it with entities that implement the `Flockable` interface, here is my\r\nexample from the sample project\r\n\r\n<pre lang=\"java\"><code>\r\n// Initialize all the boids for the example\r\nfor(int i=0; i&lt;BOID_AMOUNT; i++){\r\n\t// Create New Sprite\r\n\tBoid bird = new Boid(image, new Vector2D(MathUtils.random(0, w), MathUtils.random(0, h)), \r\n\t                            new Vector2D(MathUtils.random(-20, 20), MathUtils.random(-20, 20)));\r\n\r\n\t// Add to the engine\r\n\tengine.addBoid(bird);\t\r\n\r\n\t// Add to tracking list\r\n\tboids.add(bird);\r\n}\r\n</code></pre>\r\n\r\nOnce you have everything initialized (including rules) you must call the `FlockEngine.update(float delta)` for the engine\r\nto operate properly. Something like this example:\r\n\r\n<pre lang=\"java\"><code>\r\npublic void update(float delta){\r\n\r\n  // update the flocking engine\r\n  engine.update(delta);\r\n\r\n}\r\n</code></pre>\r\n\r\nAnother control mechanism for the flocking engine are 'Rules' which all start with the base class `AbstractRule`, to see \r\nhow to use rules in the engine, check out my guide on [Using Rules](https://github.com/r0adkll/r0adkll-flocking/wiki/Using-Rules)\r\n\r\n## License\r\n * Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0.html)\r\n\r\n## Authors\r\n * Drew Heavner (VeeDubUSC@gmail.com)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}